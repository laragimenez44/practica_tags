Guia de ejercicio 3:

1) Escriban los valores de las variables para las primeras 5 ejecuciones del for en las siguientes funciones 

a) 
n = 1000
sumatorio = 0
for i in range (1,n+1):
	sumatorio = sumatorio +1
print sumatorio

n= 1000 sumatoria= 0 i= 1 sumatoria= sumatoria + 1= 2
n= 1000 sumatoria= 2 i= 2 sumatoria= sumatoria + 1= 3
n= 1000 sumatoria= 3 i= 3 sumatoria= sumatoria + 1= 4
n= 1000 sumatoria= 4 i= 4 sumatoria= sumatoria + 1= 5
n= 1000 sumatoria= 5 i= 5 sumatoria= sumatoria + 1= 6

b) 
n = 7
primo = True
for divisor in range (2,n):
	if n % divisor == 0:
		primo = False
		
1) divisor= 2 n= 7 primo= True 
2) divisor= 3 n= 7 primo= True 
3) divisor= 4 n= 7 primo= True 
4) divisor= 5 n= 7 primo= True 
5) divisor= 6 n= 7 primo= True 

c*)
n = 10
pares = 0
for i in range (0,n+1):
	if i % 2 == 0:
		pares = pares + 1
		
1) n= 10 pares= 0 i= 0 divisor= 2 pares= 0 + 1= 1
2) n= 10 pares= 1 i= 1 divisor= 2 pares=  1
3) n= 10 pares= 1 i= 2 divisor= 2 pares= 1 + 1= 2
4) n= 10 pares= 2 i= 3 divisor= 2 pares=  2
5) n= 10 pares= 2 i= 0 divisor= 2 pares= pares= 2

2) Escribir los programas del punto 2 como como while

a)
n = 1000
sumatorio = 0
i=1
while i > n+1:
	sumatorio = sumatorio +1
i = i +1
print sumatorio

b)
n = 7
primo = True
divisor= 2
while divisor < n:
	if n % divisor == 0:
		primo = False
divisor= divisor + 1

c*)
n = 10
pares = 0
i= 0
while i < n+1:
	if i % 2 == 0:
		pares = pares + 1
i= i + 1

3) Defina las siguientes funciones
a) definir una funcion que cuente la cantidad de veces que aparece un numero en una lista
b) definir una funcion que diga si aparece un elemento en una lsita
c*) definir una funcion que cuente la cantidad de veces que aparece un numero mayor a n en una lista

al escribir la función escriba:
+ los tipos de datos que come y que devuelve la función
+ escriba al menos 2 "asserts" condiciones de ejemplo de lo que deberia devolver la funcion

a) 
def contador (a: list, b: elem) -> int:
	contador= 0
	for elem in a:
		if elem == b:
		contador= contador + 1
	return contador
assert contador([1,4,4,3],3) == 1
assert contador([1,2,4,3],3) != 0

b)
elem=0
def hay_un_elemento (x:list, l:elem) -> bool:
      for elemento in x:
            if elemento  != elem:
                return False
            else:
                elemento == elem
                return True

c) definir una funcion que cuente la cantidad de veces que aparece un numero mayor a n en una lista

def es_mayor_a_N (y:list, n: int) -> int:
	contador= 0
	for numero in y:
		if numero > n:
			contador= contador + 1
		else:
			contador= contador
	return contador
assert es_mayor_a_N ([1,1,2,2],0 ) == 4
assert es_mayor_a_N ([1,5,4], 7) == 0
